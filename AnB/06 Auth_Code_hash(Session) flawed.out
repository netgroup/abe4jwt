Open-Source Fixedpoint Model-Checker version 2020
INPUT:
   oidc.anb
SUMMARY:
  ATTACK_FOUND
GOAL:
  weak_auth
BACKEND:
  Open-Source Fixedpoint Model-Checker version 2020
STATISTICS:
  TIME 156 ms
  parseTime 8 ms
  visitedNodes: 16 nodes
  depth: 6 plies

#i can simply intercept the token and use it with the RS
ATTACK TRACE:
(x902,1) -> i: Scope(1)
i -> (x901,1): Scope(1)
(x901,1) -> i: {Scope(1),as,Session(2)}_inv(authChCr(x901))
i -> (x902,1): {Scope(1),as,Session(2)}_inv(authChCr(x901))

(x902,1) -> i: pseudonym(x902),{|x901,Scope(1),State(3),nonce(Session(2))|}_(secChCr(pseudonym(x902),as))
i -> (as,1): pseudonym(x902),{|x901,Scope(1),State(3),nonce(Session(2))|}_(secChCr(pseudonym(x902),as))
(as,1) -> i: State(3),code(Scope(1),State(3),nonce(Session(2))),Scope(1)
i -> (x902,1): State(3),code(Scope(1),State(3),nonce(Session(2))),Scope(1)

(x902,1) -> i: pseudonym(x902),{|x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2)))|}_(secChCr(pseudonym(x902),as))
i -> (as,1): pseudonym(x902),{|x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2)))|}_(secChCr(pseudonym(x902),as))
(as,1) -> i: {{resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,x901,nonce(Session(2))}_inv(pk(as)),code(Scope(1),State(3),nonce(Session(2)))}_inv(authChCr(as))

i -> (x901,1): i,{|{resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,x901,nonce(Session(2))}_inv(pk(as)),Session(2)|}_(secChCr(i,x901))
(x901,1) -> i: {|Data(7),Session(2)|}_(secChCr(x901,i))


% Reached State:
% 
% request(x901,x902,pRSCRSresourcecodeScopeStatenonceSessionCasSession,x901,resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,Session(2),1)
% state_rRS(x901,2,pk(as),as,Scope(1),Session(2),Scope(1),as,Session(2),nonce(Session(2)),x902,resource(code(Scope(1),State(3),nonce(Session(2)))),{resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,x901,nonce(Session(2))}_inv(pk(as)),{resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,x901,nonce(Session(2))}_inv(pk(as)),Session(2),i,Data(7),Data(7),Session(2),1)
% witness(x901,x902,pCRSData,Data(7))
% secrets(Data(7),secrecyset(x901,1,pData),i)
% contains(secrecyset(x901,1,pData),x901)
% contains(secrecyset(x901,1,pData),x902)
% state_ras(as,2,hash,resource,code,pw(as,x902),x902,inv(pk(as)),pk(as),nonce(Session(2)),State(3),Scope(1),x901,x901,Scope(1),State(3),nonce(Session(2)),pseudonym(x902),State(3),code(Scope(1),State(3),nonce(Session(2))),Scope(1),code(Scope(1),State(3),nonce(Session(2))),x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2))),{resource(code(Scope(1),State(3),nonce(Session(2)))),x902,as,x901,nonce(Session(2))}_inv(pk(as)),code(Scope(1),State(3),nonce(Session(2))),1)
% state_rC(x902,3,nonce,hash,pw(as,x902),pk(as),x901,Scope(1),Session(2),as,Scope(1),as,Session(2),State(3),x901,Scope(1),State(3),nonce(Session(2)),nonce(Session(2)),code(Scope(1),State(3),nonce(Session(2))),State(3),code(Scope(1),State(3),nonce(Session(2))),Scope(1),x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2))),1)
% witness(as,x902,pCasStateScopecodeScopeStatenonceSession,State(3),Scope(1),code(Scope(1),State(3),nonce(Session(2))))
% witness(x902,as,pasCCpwasCcodeScopeStatenonceSession,x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2))))
% wrequest(as,x902,pasCCpwasCcodeScopeStatenonceSession,x902,pw(as,x902),code(Scope(1),State(3),nonce(Session(2))),i)