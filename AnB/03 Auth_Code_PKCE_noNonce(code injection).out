Open-Source Fixedpoint Model-Checker version 2020
Verified for 1 sessions
INPUT:
   oidc.anb
SUMMARY:
  ATTACK_FOUND
GOAL:
  weak_auth
BACKEND:
  Open-Source Fixedpoint Model-Checker version 2020
STATISTICS:
  TIME 12040 ms
  parseTime 0 ms
  visitedNodes: 4560 nodes
  depth: 10 plies

ATTACK TRACE:
(x1301,1) -> i: Scope(1)
(x1301,2) -> i: Scope(2)
i -> (x1301,1): {Scope(1),as,x407}_inv(authChCr(i))
i -> (x1301,2): {Scope(2),as,x607}_inv(authChCr(i))

#Client(1) asks for code with Scope(1)
(x1301,1) -> i: pseudonym(x1301),{|i,Scope(1),State(3),Nonce(3),hash(Verifier(3))|}_(secChCr(pseudonym(x1301),as))
i -> (as,1): pseudonym(x1301),{|i,Scope(1),State(3),Nonce(3),hash(Verifier(3))|}_(secChCr(pseudonym(x1301),as))
(as,1) -> i: State(3),code(Scope(1),State(3),Nonce(3)),Scope(1)

#Client(2) asks for code with Scope(2), but the attacker returns the same code to both Clients
(x1301,2) -> i: pseudonym(x1301),{|i,Scope(2),State(5),Nonce(5),hash(Verifier(5))|}_(secChCr(pseudonym(x1301),as))
i -> (as,2): pseudonym(x1301),{|i,Scope(2),State(5),Nonce(5),hash(Verifier(5))|}_(secChCr(pseudonym(x1301),as))
(as,2) -> i: State(5),code(Scope(2),State(5),Nonce(5)),Scope(2)
i -> (x1301,1): State(3),code(Scope(2),State(5),Nonce(5)),Scope(1)
i -> (x1301,2): State(5),code(Scope(2),State(5),Nonce(5)),Scope(2)

#Client(2) code4token (incomplete)
(x1301,2) -> i: pseudonym(x1301),{|x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(5)|}_(secChCr(pseudonym(x1301),as))
i -> (as,2): pseudonym(x1301),{|x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(5)|}_(secChCr(pseudonym(x1301),as))
(as,2) -> i: {|{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),code(Scope(2),State(5),Nonce(5))|}_(secChCr(as,pseudonym(x1301)))

#Client(1)'s code4token: the attacker returns the wrong token
(x1301,1) -> i: pseudonym(x1301),{|x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(3)|}_(secChCr(pseudonym(x1301),as))
i -> (x1301,1): {|{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),code(Scope(2),State(5),Nonce(5))|}_(secChCr(as,pseudonym(x1301)))

#Client(1) uses the wrong token
(x1301,1) -> i: pseudonym(x1301),{|{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),x407|}_(secChCr(pseudonym(x1301),i))
i -> (x1301,1): {|x1213,x407|}_(secChCr(i,pseudonym(x1301)))


% Reached State:
% 
% request(x1301,as,pCasStateScopecodeScopeStateNonce,State(3),Scope(1),code(Scope(2),State(5),Nonce(5)),1)
% contains(secrecyset(x1301,1,pData),x1301)
% contains(secrecyset(x1301,1,pData),i)
% secrets(x1213,secrecyset(x1301,1,pData),i)
% request(x1301,i,pCRSData,x1213,1)
% state_rC(x1301,5,hash,pw(as,x1301),pk(as),i,Scope(1),x407,as,Scope(1),as,x407,State(3),Nonce(3),Verifier(3),i,Scope(1),State(3),Nonce(3),hash(Verifier(3)),hash(Verifier(3)),code(Scope(2),State(5),Nonce(5)),State(3),code(Scope(2),State(5),Nonce(5)),Scope(1),x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(3),resource(code(Scope(2),State(5),Nonce(5))),{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),code(Scope(2),State(5),Nonce(5)),{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),x407,x1213,x1213,x407,1)
% state_rRS(x34,0,pk(as),as,2)
% state_ras(as,2,hash,resource,code,pw(as,x1301),x1301,inv(pk(as)),pk(as),hash(Verifier(5)),Nonce(5),State(5),Scope(2),i,i,Scope(2),State(5),Nonce(5),hash(Verifier(5)),pseudonym(x1301),State(5),code(Scope(2),State(5),Nonce(5)),Scope(2),code(Scope(2),State(5),Nonce(5)),Verifier(5),x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(5),{resource(code(Scope(2),State(5),Nonce(5))),x1301,as,i}_inv(pk(as)),code(Scope(2),State(5),Nonce(5)),2)
% state_rC(x1301,3,hash,pw(as,x1301),pk(as),i,Scope(2),x607,as,Scope(2),as,x607,State(5),Nonce(5),Verifier(5),i,Scope(2),State(5),Nonce(5),hash(Verifier(5)),hash(Verifier(5)),code(Scope(2),State(5),Nonce(5)),State(5),code(Scope(2),State(5),Nonce(5)),Scope(2),x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),Verifier(5),2)
% state_rRS(x29,0,pk(as),as,1)
% state_ras(as,1,hash,resource,code,pw(as,x27),x27,inv(pk(as)),pk(as),hash(Verifier(3)),Nonce(3),State(3),Scope(1),i,i,Scope(1),State(3),Nonce(3),hash(Verifier(3)),pseudonym(x1301),State(3),code(Scope(1),State(3),Nonce(3)),Scope(1),1)
% witness(as,x27,pCasStateScopecodeScopeStateNonce,State(3),Scope(1),code(Scope(1),State(3),Nonce(3)))
% witness(as,x1301,pCasStateScopecodeScopeStateNonce,State(5),Scope(2),code(Scope(2),State(5),Nonce(5)))
% witness(x1301,as,pasCCpwasCcodeScopeStateNonce,x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)))
% wrequest(as,x1301,pasCCpwasCcodeScopeStateNonce,x1301,pw(as,x1301),code(Scope(2),State(5),Nonce(5)),i)
% witness(x1301,i,pRSCRSresourcecodeScopeStateNonceCasSession,i,resource(code(Scope(2),State(5),Nonce(5))),x1301,as,x407)